{"version":3,"file":"static/js/585.5d8fac3b.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://try-1/./src/components/projects/Phonebook/Phonebook.module.css?00ec","components/projects/Phonebook/Phonebook/Phonebook.jsx","components/projects/Phonebook/PhonebookList/PhonebookList.jsx","../node_modules/nanoid/index.browser.js","components/projects/Phonebook/PhonebookForm/PhonebookForm.jsx","components/projects/Phonebook/Filter/Filter.jsx","webpack://try-1/./src/pages/Phonebook/PhonebookPage.module.css?da51","pages/Phonebook/PhonebookPage.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilterQuery = state => state.filter;\nexport const selectIsError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"contatcsContainer\":\"Phonebook_contatcsContainer__m+Y3k\",\"contacts__title\":\"Phonebook_contacts__title__xXJJT\",\"contactsForm\":\"Phonebook_contactsForm__1BLnC\",\"contactsForm__field\":\"Phonebook_contactsForm__field__zKZHK\",\"contactsFrom__label\":\"Phonebook_contactsFrom__label__6m7+Z\",\"contactsForm__input\":\"Phonebook_contactsForm__input__s1u4R\",\"contactsForm__svg\":\"Phonebook_contactsForm__svg__v-V-u\",\"contacts__button\":\"Phonebook_contacts__button__Hsbqf\",\"contacts\":\"Phonebook_contacts__9rlu1\",\"noContacts\":\"Phonebook_noContacts__0w6bL\",\"noContacts__text\":\"Phonebook_noContacts__text__cfk-S\",\"findContacts__label\":\"Phonebook_findContacts__label__rc+Fi\",\"findContacts__input\":\"Phonebook_findContacts__input__Zu91z\",\"findContacts__icon\":\"Phonebook_findContacts__icon__VB18q\",\"ContactList\":\"Phonebook_ContactList__8ZDx6\",\"ContactList__item\":\"Phonebook_ContactList__item__wzGRi\",\"Contact\":\"Phonebook_Contact__QVZN8\",\"Contact__title\":\"Phonebook_Contact__title__5Rn86\",\"Contact__text\":\"Phonebook_Contact__text__jzTr7\",\"Contact__deleteButton\":\"Phonebook_Contact__deleteButton__pgBXY\"};","import PropTypes from 'prop-types';\nimport css from '../Phonebook.module.css';\n\nexport default function Phonebook({ contacts, onDelete }) {\n  return (\n    <>\n      {contacts\n        .sort((a, b) => b.id - a.id)\n        .map(({ id, name, number }, index) => (\n          <li key={id} className={css.ContactList__item}>\n            <h3 className={css.Contact__title}>Contact {index + 1}</h3>\n            <div className={css.Contact}>\n              <p className={css.Contact__text}>\n                <span style={{ fontWeight: 700 }}>Name: </span>\n                {name}\n              </p>\n              <p className={css.Contact__text}>\n                <span style={{ fontWeight: 700 }}>Phone:</span> {number}\n              </p>\n              <button\n                className={css.Contact__deleteButton}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n    </>\n  );\n}\n\nPhonebook.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import Contact from '../Phonebook/Phonebook';\nimport PropTypes from 'prop-types';\nimport css from '../Phonebook.module.css';\n\nexport default function Phonebook({ contacts, onDelete }) {\n  return (\n    <ul className={css.ContactList}>\n      <Contact key={contacts.id} contacts={contacts} onDelete={onDelete} />\n    </ul>\n  );\n}\n\nPhonebook.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { nanoid } from 'nanoid';\n\nimport { useSelector } from 'react-redux/es';\nimport { selectContacts } from '../../../../redux/selectors';\n\nimport style from '../Phonebook.module.css';\nimport { ImUser } from 'react-icons/im';\nimport { ImPhone } from 'react-icons/im';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nconst Phonebook = ({ sendDataToApp }) => {\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useLocalStorage('name', '');\n  const [number, setNumber] = useLocalStorage('number', '');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = e.currentTarget.elements;\n\n    const contact = {\n      id: nanoid(),\n      name: name.value,\n      number: number.value,\n    };\n\n    if (onDuplicateCheck(contact.name)) {\n      e.currentTarget.reset();\n      // name.focus() || number.focus()\n      Notiflix.Notify.failure(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    sendDataToApp({ name: name.value, number: number.value }, contact);\n    reset();\n  };\n\n  const onDuplicateCheck = name => {\n    const newContactName = name.toLowerCase();\n\n    return contacts.some(\n      contact => contact.name.toLowerCase() === newContactName\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.contactsForm} onSubmit={onSubmit}>\n      <div className={style.contactsForm__field}>\n        <label className={style.contactsFrom__label}>\n          Name\n          <input\n            className={style.contactsForm__input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Z\\s]+$\"\n            placeholder=\"Rosie Simpson\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            required\n          />\n          <ImUser className={style.contactsForm__svg} />\n        </label>\n      </div>\n      <div className={style.contactsForm__field}>\n        <label className={style.contactsFrom__label}>\n          Number\n          <input\n            className={style.contactsForm__input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"^[+]?[0-9\\s]+$\"\n            placeholder=\"+123 456 789\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            required\n          />\n          <ImPhone className={style.contactsForm__svg} />\n        </label>\n      </div>\n      <button className={style.contacts__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Phonebook;\n\nPhonebook.propTypes = {\n  sendDataToApp: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux/es';\n\nimport css from '../Phonebook.module.css';\nimport { ImSearch } from 'react-icons/im';\n\nconst Filter = ({ changeFilter }) => {\n  const filterQuery = useSelector(state => state.filter);\n  return (\n    <div className={css.contactsForm__field}>\n      <label className={css.findContacts__label}>\n        Find contacts by name\n        <input\n          className={css.findContacts__input}\n          type=\"text\"\n          name=\"filter\"\n          value={filterQuery}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={changeFilter}\n          required\n        />\n        <ImSearch className={css.findContacts__icon} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contatcsContainer\":\"PhonebookPage_contatcsContainer__7JPDY\",\"contacts__title\":\"PhonebookPage_contacts__title__qqkne\",\"contactsForm\":\"PhonebookPage_contactsForm__rjLKY\",\"contactsForm__field\":\"PhonebookPage_contactsForm__field__hrkBc\",\"contactsFrom__label\":\"PhonebookPage_contactsFrom__label__3nE0k\",\"contactsForm__input\":\"PhonebookPage_contactsForm__input__ErM59\",\"contactsForm__svg\":\"PhonebookPage_contactsForm__svg__CuriK\",\"contacts__button\":\"PhonebookPage_contacts__button__VeFaF\",\"contacts\":\"PhonebookPage_contacts__U2wKh\",\"noContacts\":\"PhonebookPage_noContacts__urU5E\",\"noContacts__text\":\"PhonebookPage_noContacts__text__F1v1q\",\"findContacts__label\":\"PhonebookPage_findContacts__label__b7SoY\",\"findContacts__input\":\"PhonebookPage_findContacts__input__zEzPz\",\"findContacts__icon\":\"PhonebookPage_findContacts__icon__x3SrA\",\"ContactList\":\"PhonebookPage_ContactList__ZkaM-\",\"ContactList__item\":\"PhonebookPage_ContactList__item__z68Dn\",\"Contact\":\"PhonebookPage_Contact__Ez8Ex\",\"Contact__title\":\"PhonebookPage_Contact__title__tat8n\",\"Contact__text\":\"PhonebookPage_Contact__text__NdKls\",\"Contact__deleteButton\":\"PhonebookPage_Contact__deleteButton__YrOjN\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts, deleteContact, addContact } from 'redux/ApiOperations';\nimport {\n  selectContacts,\n  selectFilterQuery,\n  selectIsError,\n  selectIsLoading,\n} from '../../redux/selectors.js';\n\nimport Loader from '../../components/Loader/Loader.jsx';\nimport ContactList from '../../components/projects/Phonebook/PhonebookList/PhonebookList.jsx';\nimport ContactForm from '../../components/projects/Phonebook/PhonebookForm/PhonebookForm.jsx';\nimport Filter from '../../components/projects/Phonebook/Filter/Filter.jsx';\n\nimport css from './PhonebookPage.module.css';\n\nconst PhonebookPage = () => {\n  // const isFirstRender = useRef(true);\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filterQuery = useSelector(selectFilterQuery);\n  const isError = useSelector(selectIsError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    // if (isFirstRender.current) {\n    //   isFirstRender.current = false;\n    //   return;\n    // }\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const formOnSubmit = newContact => {\n    dispatch(addContact(newContact));\n  };\n\n  const changeFilter = e => {\n    const query = e.currentTarget.value;\n\n    dispatch({ type: 'filter/filter', payload: query });\n  };\n\n  const deleteContactById = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const normalizedFilter = filterQuery.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div style={{ width: '100%' }}>\n      <h1 className={css.contacts__title}>Phonebook</h1>\n      <ContactForm sendDataToApp={formOnSubmit} />\n      {isError && <h1>Ops, something went wrong</h1>}\n      {isLoading && <Loader />}\n\n      {contacts.length > 0 && !isError && !isLoading && (\n        <div className={css.contacts}>\n          <h2 className={css.contacts__title}>Contacts</h2>\n          <Filter changeFilter={changeFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onDelete={deleteContactById}\n          />\n        </div>\n      )}\n\n      {!isLoading && contacts.length < 1 && !isError && (\n        <div className={css.contacts}>\n          <h2 className={css.contacts__title}>Contacts</h2>\n          <div className={css.noContacts}>\n            <p className={css.noContacts__text}>There are no contacts yet</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectContacts","state","contacts","items","selectFilterQuery","filter","selectIsError","error","selectIsLoading","isLoading","Phonebook","onDelete","sort","a","b","id","map","index","name","number","className","css","style","fontWeight","type","onClick","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","sendDataToApp","useSelector","setName","setNumber","handleChange","e","target","value","onDuplicateCheck","newContactName","toLowerCase","some","contact","reset","onSubmit","preventDefault","currentTarget","elements","Notiflix","pattern","placeholder","title","onChange","required","changeFilter","filterQuery","dispatch","useDispatch","isError","fetchContacts","normalizedFilter","filteredContacts","includes","width","newContact","addContact","Loader","length","query","payload","contactId","deleteContact"],"sourceRoot":""}